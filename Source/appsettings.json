{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Warning",
      "Override": {
        "WebHostedWorker.Template": "Debug",
        "Otc": "Information"
      }
    }
  },
  "AllowedHosts": "*",
  "RequestTrackerConfiguration": {
    "RequestTrackerEnabled": true
  },
  "JwtConfiguration": {
    "Audience": "webhostedworker.template",
    "Issuer": "webhostedworker.template",
    "SecretKey": "3ij4j7yY8jh829Lbkks3j5H1"
  },
  "DistributedCacheConfiguration": {
    // CacheStorageType valid values: Memory, SqlServer or Redis
    "CacheStorageType": "Memory"
    // [Memory configuration]
    // MemorySizeLimit: long (default 100MB)
    // [SqlServer configuration]
    // CacheSqlConnectionString: string
    // CacheSqlSchemaName: string
    // CacheSqlTableName: string
    // [Redis configuration]
    // CacheRedisConfiguration: string
    // CacheRedisInstanceName: string
  },

  //
  // Configuracoes que afetam o comportamento do WebHostedWorker
  //
  "HostedWorkerConfiguration": {
    // WorkerTimeoutInSeconds:
    // Tempo maximo permitido para um trabalho (IHostedWorker.WorkAsync) executar.
    // Apos WorkerTimeoutInSeconds, sera solicitado encerramento por meio do cancelationToken.
    // Valor padrao: 60
    "WorkerTimeoutInSeconds": 60,
    // WorkerTerminationTorerationTimeoutInSeconds:
    // Caso o WorkerTimeoutInSeconds seja atingido, apos solicitar o encerramento por meio do
    // cancelationToken, caso o trabalho nao termine em mais
    // WorkerTerminationTorerationTimeoutInSeconds, a aplicacao como um todo sera encerrada.
    // Valor padrao: 15
    "WorkerTerminationTorerationTimeoutInSeconds": 15,
    // MaxConsecutiveErrors:
    // Quantidade maxima de erros consecutivos permitidos. Apos atigir MaxConsecutiveErrors
    // erros consecutivos, a aplicacao sera encerrada.
    // Valor padrao: 5
    "MaxConsecutiveErrors": 5
  }
}